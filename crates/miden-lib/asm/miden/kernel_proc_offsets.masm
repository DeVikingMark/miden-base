# OFFSET CONSTANTS
# -------------------------------------------------------------------------------------------------

### Account #####################################

# Entire account commitment
const.ACCOUNT_GET_INITIAL_COMMITMENT_OFFSET=0
const.ACCOUNT_COMPUTE_CURRENT_COMMITMENT_OFFSET=1

# ID
const.ACCOUNT_GET_ID_OFFSET=2
const.ACCOUNT_GET_NATIVE_ID_OFFSET=3

# Nonce
const.ACCOUNT_GET_NONCE_OFFSET=4                      # accessor
const.ACCOUNT_INCR_NONCE_OFFSET=5                     # mutator
const.ACCOUNT_GET_NATIVE_NONCE_OFFSET=6

# Code
const.ACCOUNT_GET_CODE_COMMITMENT_OFFSET=7

# Storage
const.ACCOUNT_GET_INITIAL_STORAGE_COMMITMENT_OFFSET=8
const.ACCOUNT_COMPUTE_STORAGE_COMMITMENT_OFFSET=9
const.ACCOUNT_GET_ITEM_OFFSET=10
const.ACCOUNT_GET_INITIAL_ITEM_OFFSET=11
const.ACCOUNT_SET_ITEM_OFFSET=12
const.ACCOUNT_GET_MAP_ITEM_OFFSET=13
const.ACCOUNT_GET_INITIAL_MAP_ITEM_OFFSET=14
const.ACCOUNT_SET_MAP_ITEM_OFFSET=15

# Vault
const.ACCOUNT_GET_INITIAL_VAULT_ROOT_OFFSET=16
const.ACCOUNT_GET_VAULT_ROOT_OFFSET=17
const.ACCOUNT_ADD_ASSET_OFFSET=18
const.ACCOUNT_REMOVE_ASSET_OFFSET=19
const.ACCOUNT_GET_BALANCE_OFFSET=20
const.ACCOUNT_GET_INITIAL_BALANCE_OFFSET=21
const.ACCOUNT_HAS_NON_FUNGIBLE_ASSET_OFFSET=22

# Delta
const.ACCOUNT_COMPUTE_DELTA_COMMITMENT_OFFSET=23

# Procedure introspection
const.ACCOUNT_GET_NUM_PROCEDURES_OFFSET=24
const.ACCOUNT_GET_PROCEDURE_ROOT_OFFSET=25
const.ACCOUNT_WAS_PROCEDURE_CALLED_OFFSET=26

### Faucet ######################################
const.FAUCET_MINT_ASSET_OFFSET=27
const.FAUCET_BURN_ASSET_OFFSET=28
const.FAUCET_GET_TOTAL_FUNGIBLE_ASSET_ISSUANCE_OFFSET=29
const.FAUCET_IS_NON_FUNGIBLE_ASSET_ISSUED_OFFSET=30

### Note ########################################

# input notes
const.INPUT_NOTE_GET_METADATA_OFFSET=31
const.INPUT_NOTE_GET_ASSETS_INFO_OFFSET=32
const.INPUT_NOTE_GET_SCRIPT_ROOT_OFFSET=33
const.INPUT_NOTE_GET_INPUTS_INFO_OFFSET=34
const.INPUT_NOTE_GET_SERIAL_NUMBER_OFFSET=35
const.INPUT_NOTE_GET_RECIPIENT_OFFSET=36

# output notes
const.OUTPUT_NOTE_CREATE_OFFSET=37
const.OUTPUT_NOTE_GET_METADATA_OFFSET=38
const.OUTPUT_NOTE_GET_ASSETS_INFO_OFFSET=39
const.OUTPUT_NOTE_GET_RECIPIENT_OFFSET=40
const.OUTPUT_NOTE_ADD_ASSET_OFFSET=41

### Tx ##########################################

# input notes
const.TX_GET_NUM_INPUT_NOTES_OFFSET=42
const.TX_GET_INPUT_NOTES_COMMITMENT_OFFSET=43

# output notes
const.TX_GET_NUM_OUTPUT_NOTES_OFFSET=44
const.TX_GET_OUTPUT_NOTES_COMMITMENT_OFFSET=45

# block info
const.TX_GET_BLOCK_COMMITMENT_OFFSET=46
const.TX_GET_BLOCK_NUMBER_OFFSET=47
const.TX_GET_BLOCK_TIMESTAMP_OFFSET=48

# foreign context
const.TX_START_FOREIGN_CONTEXT_OFFSET=49
const.TX_END_FOREIGN_CONTEXT_OFFSET=50

# expiration data
const.TX_GET_EXPIRATION_DELTA_OFFSET=51               # accessor
const.TX_UPDATE_EXPIRATION_BLOCK_DELTA_OFFSET=52      # mutator

# ACCESSORS
# -------------------------------------------------------------------------------------------------

### ACCOUNT #####################################

#! Returns the offset of the `account_get_initial_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_initial_commitment` kernel procedure required to
#!   get the address where this procedure is stored.
export.account_get_initial_commitment_offset
    push.ACCOUNT_GET_INITIAL_COMMITMENT_OFFSET
end

#! Returns the offset of the `account_compute_current_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_compute_current_commitment` kernel procedure required
#!   to get the address where this procedure is stored.
export.account_compute_current_commitment_offset
    push.ACCOUNT_COMPUTE_CURRENT_COMMITMENT_OFFSET
end

#! Returns the offset of the `account_compute_delta_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_compute_delta_commitment` kernel procedure required
#!   to get the address where this procedure is stored.
export.account_compute_delta_commitment_offset
    push.ACCOUNT_COMPUTE_DELTA_COMMITMENT_OFFSET
end

#! Returns the offset of the `account_get_id` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_id` kernel procedure required to get the address
#!   where this procedure is stored.
export.account_get_id_offset
    push.ACCOUNT_GET_ID_OFFSET
end

#! Returns the offset of the `account_get_native_id` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_native_id` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_get_native_id_offset
    push.ACCOUNT_GET_NATIVE_ID_OFFSET
end

#! Returns the offset of the `account_get_nonce` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_nonce` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_get_nonce_offset
    push.ACCOUNT_GET_NONCE_OFFSET
end

#! Returns the offset of the `account_incr_nonce` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_incr_nonce` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_incr_nonce_offset
    push.ACCOUNT_INCR_NONCE_OFFSET
end

#! Returns the offset of the `account_get_native_nonce` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_native_nonce` kernel procedure required to get
#!   the address where this procedure is stored.
export.account_get_native_nonce_offset
    push.ACCOUNT_GET_NATIVE_NONCE_OFFSET
end

#! Returns the offset of the `account_get_code_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_code_commitment` kernel procedure required to get
#!   the address where this procedure is stored.
export.account_get_code_commitment_offset
    push.ACCOUNT_GET_CODE_COMMITMENT_OFFSET
end

#! Returns the offset of the `account_get_initial_storage_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_initial_storage_commitment` kernel procedure
#!   required to get the address where this procedure is stored.
export.account_get_initial_storage_commitment_offset
    push.ACCOUNT_GET_INITIAL_STORAGE_COMMITMENT_OFFSET
end

#! Returns the offset of the `account_compute_storage_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_compute_storage_commitment` kernel procedure required
#!   to get the address where this procedure is stored.
export.account_compute_storage_commitment_offset
    push.ACCOUNT_COMPUTE_STORAGE_COMMITMENT_OFFSET
end

#! Returns the offset of the `account_get_item` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_item` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_get_item_offset
    push.ACCOUNT_GET_ITEM_OFFSET
end

#! Returns the offset of the `account_set_item` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_set_item` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_set_item_offset
    push.ACCOUNT_SET_ITEM_OFFSET
end

#! Returns the offset of the `account_get_map_item` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_map_item` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_get_map_item_offset
    push.ACCOUNT_GET_MAP_ITEM_OFFSET
end

#! Returns the offset of the `account_set_map_item` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_set_map_item` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_set_map_item_offset
    push.ACCOUNT_SET_MAP_ITEM_OFFSET
end

#! Returns the offset of the `account_get_initial_item` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_initial_item` kernel procedure required to get
#!   the address where this procedure is stored.
export.account_get_initial_item_offset
    push.ACCOUNT_GET_INITIAL_ITEM_OFFSET
end

#! Returns the offset of the `account_get_initial_map_item` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_initial_map_item` kernel procedure required to 
#!   get the address where this procedure is stored.
export.account_get_initial_map_item_offset
    push.ACCOUNT_GET_INITIAL_MAP_ITEM_OFFSET
end

#! Returns the offset of the `account_get_initial_vault_root` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_initial_vault_root` kernel procedure required
#!   to get the address where this procedure is stored.
export.account_get_initial_vault_root_offset
    push.ACCOUNT_GET_INITIAL_VAULT_ROOT_OFFSET
end

#! Returns the offset of the `account_get_vault_root` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_vault_root` kernel procedure required to
#!   get the address where this procedure is stored.
export.account_get_vault_root_offset
    push.ACCOUNT_GET_VAULT_ROOT_OFFSET
end

#! Returns the offset of the `account_add_asset` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_add_asset` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_add_asset_offset
    push.ACCOUNT_ADD_ASSET_OFFSET
end

#! Returns the offset of the `account_remove_asset` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_remove_asset` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_remove_asset_offset
    push.ACCOUNT_REMOVE_ASSET_OFFSET
end

#! Returns the offset of the `account_get_balance` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_balance` kernel procedure required to get the
#!   address where this procedure is stored.
export.account_get_balance_offset
    push.ACCOUNT_GET_BALANCE_OFFSET
end

#! Returns the offset of the `account_get_initial_balance` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_get_initial_balance` kernel procedure required to get
#!   the address where this procedure is stored.
export.account_get_initial_balance_offset
    push.ACCOUNT_GET_INITIAL_BALANCE_OFFSET
end

#! Returns the offset of the `account_has_non_fungible_asset` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_has_non_fungible_asset` kernel procedure required to
#!   get the address where this procedure is stored.
export.account_has_non_fungible_asset_offset
    push.ACCOUNT_HAS_NON_FUNGIBLE_ASSET_OFFSET
end

#! Returns the offset of the `account_was_procedure_called` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `account_was_procedure_called` kernel procedure required to
#!   get the address where this procedure is stored.
export.account_was_procedure_called_offset
    push.ACCOUNT_WAS_PROCEDURE_CALLED_OFFSET
end



### FAUCET ######################################

#! Returns the offset of the `faucet_mint_asset` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `faucet_mint_asset` kernel procedure required to get the
#!   address where this procedure is stored.
export.faucet_mint_asset_offset
    push.FAUCET_MINT_ASSET_OFFSET
end

#! Returns the offset of the `faucet_burn_asset` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `faucet_burn_asset` kernel procedure required to get the
#!   address where this procedure is stored.
export.faucet_burn_asset_offset
    push.FAUCET_BURN_ASSET_OFFSET
end

#! Returns the offset of the `faucet_get_total_fungible_asset_issuance` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `faucet_get_total_fungible_asset_issuance` kernel procedure
#!   required to get the address where this procedure is stored.
export.faucet_get_total_fungible_asset_issuance_offset
    push.FAUCET_GET_TOTAL_FUNGIBLE_ASSET_ISSUANCE_OFFSET
end

#! Returns the offset of the `faucet_is_non_fungible_asset_issued` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `faucet_is_non_fungible_asset_issued` kernel procedure
#!   required to get the address where this procedure is stored.
export.faucet_is_non_fungible_asset_issued_offset
    push.FAUCET_IS_NON_FUNGIBLE_ASSET_ISSUED_OFFSET
end

### OUTPUT NOTE ########################################

#! Returns the offset of the `output_note_create` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `output_note_create` kernel procedure required to get the
#!   address where this procedure is stored.
export.output_note_create_offset
    push.OUTPUT_NOTE_CREATE_OFFSET
end

#! Returns the offset of the `output_note_add_asset` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `output_note_add_asset` kernel procedure required to get the
#!   address where this procedure is stored.
export.output_note_add_asset_offset
    push.OUTPUT_NOTE_ADD_ASSET_OFFSET
end

#! Returns the offset of the `output_note_get_assets_info` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `output_note_get_assets_info` kernel procedure required to get
#!  the address where this procedure is stored.
export.output_note_get_assets_info_offset
    push.OUTPUT_NOTE_GET_ASSETS_INFO_OFFSET
end

#! Returns the offset of the `output_note_get_recipient` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `output_note_get_recipient` kernel procedure required to get
#!  the address where this procedure is stored.
export.output_note_get_recipient_offset
    push.OUTPUT_NOTE_GET_RECIPIENT_OFFSET
end

#! Returns the offset of the `output_note_get_metadata` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `output_note_get_metadata` kernel procedure required to get
#!  the address where this procedure is stored.
export.output_note_get_metadata_offset
    push.OUTPUT_NOTE_GET_METADATA_OFFSET
end

### INPUT NOTE ########################################

#! Returns the offset of the `input_note_get_assets_info` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `input_note_get_assets_info` kernel procedure required to get
#! the address where this procedure is stored.
export.input_note_get_assets_info_offset
    push.INPUT_NOTE_GET_ASSETS_INFO_OFFSET
end

#! Returns the offset of the `input_note_get_recipient` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `input_note_get_recipient` kernel procedure required to get
#!  the address where this procedure is stored.
export.input_note_get_recipient_offset
    push.INPUT_NOTE_GET_RECIPIENT_OFFSET
end

#! Returns the offset of the `input_note_get_metadata` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `input_note_get_metadata` kernel procedure required to get
#!  the address where this procedure is stored.
export.input_note_get_metadata_offset
    push.INPUT_NOTE_GET_METADATA_OFFSET
end

#! Returns the offset of the `input_note_get_serial_number` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `input_note_get_serial_number` kernel procedure required to
#!   get the address where this procedure is stored.
export.input_note_get_serial_number_offset
    push.INPUT_NOTE_GET_SERIAL_NUMBER_OFFSET
end

#! Returns the offset of the `input_note_get_inputs_info` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `input_note_get_inputs_info` kernel procedure required to get
#!   the address where this procedure is stored.
export.input_note_get_inputs_info_offset
    push.INPUT_NOTE_GET_INPUTS_INFO_OFFSET
end

#! Returns the offset of the `input_note_get_script_root` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `input_note_get_script_root` kernel procedure required to get
#!   the address where this procedure is stored.
export.input_note_get_script_root_offset
    push.INPUT_NOTE_GET_SCRIPT_ROOT_OFFSET
end

### TRANSACTION #################################

#! Returns the offset of the `tx_get_input_notes_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_input_notes_commitment` kernel procedure required to
#!   get the address where this procedure is stored.
export.tx_get_input_notes_commitment_offset
    push.TX_GET_INPUT_NOTES_COMMITMENT_OFFSET
end

#! Returns the offset of the `tx_get_output_notes_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_output_notes_commitment` kernel procedure required to
#!   get the address where this procedure is stored.
export.tx_get_output_notes_commitment_offset
    push.TX_GET_OUTPUT_NOTES_COMMITMENT_OFFSET
end

#! Returns the offset of the `tx_get_num_input_notes` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_num_input_notes` kernel procedure required to get the
#!   address where this procedure is stored.
export.tx_get_num_input_notes_offset
    push.TX_GET_NUM_INPUT_NOTES_OFFSET
end

#! Returns the offset of the `tx_get_num_output_notes` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_num_output_notes` kernel procedure required to get the
#!   address where this procedure is stored.
export.tx_get_num_output_notes_offset
    push.TX_GET_NUM_OUTPUT_NOTES_OFFSET
end

#! Returns the offset of the `tx_get_block_commitment` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_block_commitment` kernel procedure required to get the
#!   address where this procedure is stored.
export.tx_get_block_commitment_offset
    push.TX_GET_BLOCK_COMMITMENT_OFFSET
end

#! Returns the offset of the `tx_get_block_number` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_block_number` kernel procedure required to get the
#!   address where this procedure is stored.
export.tx_get_block_number_offset
    push.TX_GET_BLOCK_NUMBER_OFFSET
end

#! Returns the offset of the `tx_get_block_timestamp` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_block_timestamp` kernel procedure required to get the
#!   address where this procedure is stored.
export.tx_get_block_timestamp_offset
    push.TX_GET_BLOCK_TIMESTAMP_OFFSET
end

#! Returns the offset of the `tx_start_foreign_context` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_start_foreign_context` kernel procedure required to get
#!   the address where this procedure is stored.
export.tx_start_foreign_context_offset
    push.TX_START_FOREIGN_CONTEXT_OFFSET
end

#! Returns the offset of the `tx_end_foreign_context` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_end_foreign_context` kernel procedure required to get the
#!   address where this procedure is stored.
export.tx_end_foreign_context_offset
    push.TX_END_FOREIGN_CONTEXT_OFFSET
end

#! Returns the offset of the `tx_update_expiration_block_delta` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_update_expiration_block_delta` kernel procedure required
#!   to get the address where this procedure is stored.
export.tx_update_expiration_block_delta_offset
    push.TX_UPDATE_EXPIRATION_BLOCK_DELTA_OFFSET
end

#! Returns the offset of the `tx_get_expiration_delta` kernel procedure.
#!
#! Inputs:  []
#! Outputs: [proc_offset]
#!
#! Where:
#! - proc_offset is the offset of the `tx_get_expiration_delta` kernel procedure required to get the
#!   address where this procedure is stored.
export.tx_get_expiration_delta_offset
    push.TX_GET_EXPIRATION_DELTA_OFFSET
end
